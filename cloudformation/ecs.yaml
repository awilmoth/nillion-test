AWSTemplateFormatVersion: '2010-09-09'
Description: Infrastructure setup for ZKP Authorization with ECS, VPC, Subnet, Internet Gateway, Route Table, and ECR repositories.

Resources:

  ZkpPrime:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: ZkpPrime
      Name: ZkpPrime
      SecretString:
        "225133"

  ZkpGenerator:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: ZkpGenerator
      Name: ZkpGenerator
      SecretString:
        "5"

  GrpcServerPort:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: GrpcServerPort
      Name: GrpcServerPort
      SecretString:
        "50051"

  # Create ECS Cluster
  ZkpCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: zkpCluster

  # Create VPC
  ZkpVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: zkpVpc

  # Create Subnet
  ZkpSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId: !Ref ZkpVPC
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 0, !GetAZs '' ]

  ZkpSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.2.0/24
      VpcId: !Ref ZkpVPC
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 1, !GetAZs '' ]

  # Create Internet Gateway
  ZkpInternetGateway:
    Type: AWS::EC2::InternetGateway

  # Attach Gateway to VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref ZkpVPC
      InternetGatewayId: !Ref ZkpInternetGateway

  # Create Route Table
  ZkpRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ZkpVPC

  # Create Route
  ZkpRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref ZkpRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref ZkpInternetGateway

  # Associate Route Table with Subnet
  SubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ZkpSubnet1
      RouteTableId: !Ref ZkpRouteTable

  SubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ZkpSubnet2
      RouteTableId: !Ref ZkpRouteTable

  # Create ECS Task Role
  ZkpTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetAuthorizationToken
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:CreateLogGroup
                Resource: "*"

  # Create ECR Repositories
  ZkpServerRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: zkp_auth_server

  ZkpClientRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: zkp_auth_client

  # ECS Task Definition for Server
  ServerTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt ZkpTaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: zkp_auth_server
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/zkp_auth_server:latest"
          PortMappings:
            - ContainerPort: 50051
              HostPort: 50051

  # ECS Task Definition for Client
  ClientTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt ZkpTaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: zkp_auth_client
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/zkp_auth_client:latest"

Outputs:
  ZkpServerRepositoryUri:
    Description: "ZKP Auth Server Repository URI"
    Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/zkp_auth_server"
    Export:
      Name: ZkpServerRepositoryUri

  ZkpClientRepositoryUri:
    Description: "ZKP Auth Client Repository URI"
    Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/zkp_auth_client"
    Export:
      Name: ZkpClientRepositoryUri

  ClusterName:
    Description: "ECS Cluster Name"
    Value: !Ref ZkpCluster
    Export:
      Name: ClusterName

  VpcId:
    Description: "VPC ID"
    Value: !Ref ZkpVPC
    Export:
      Name: VpcId

  SubnetId1:
    Description: "Subnet ID"
    Value: !Ref ZkpSubnet1
    Export:
      Name: SubnetId1

  SubnetId2:
    Description: "Subnet ID"
    Value: !Ref ZkpSubnet2
    Export:
      Name: SubnetId2

  InternetGatewayId:
    Description: "Internet Gateway ID"
    Value: !Ref ZkpInternetGateway
    Export:
      Name: InternetGatewayId

  RouteTableId:
    Description: "Route Table ID"
    Value: !Ref ZkpRouteTable
    Export:
      Name: RouteTableId

  TaskExecutionRoleArn:
    Description: "Task Execution Role ARN"
    Value: !GetAtt ZkpTaskExecutionRole.Arn
    Export:
      Name: TaskExecutionRoleArn

  ServerTaskDefinitionArn:
    Description: "Server Task Definition ARN"
    Value: !Ref ServerTaskDefinition
    Export:
      Name: ServerTaskDefinitionArn

  ClientTaskDefinitionArn:
    Description: "Client Task Definition ARN"
    Value: !Ref ClientTaskDefinition
    Export:
      Name: ClientTaskDefinitionArn

  ZkpPrimeArn:
    Description: "ZkpPrime ARN"
    Value: !Ref ZkpPrime
    Export:
      Name: ZkpPrimeArn

  ZkpGenerator:
    Description: "ZkpGenerator ARN"
    Value: !Ref ZkpGenerator
    Export:
      Name: ZkpGeneratorArn

  GrpcServerPort:
    Description: "GrpcServerPort ARN"
    Value: !Ref GrpcServerPort
    Export:
      Name: GrpcServerPortArn